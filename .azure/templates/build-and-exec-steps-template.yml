steps:

  - task: UseRubyVersion@0
    inputs:
      versionSpec: '>= 3.0'

  - script: |
      ridk install 3
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    displayName: 'ridk for ruby install'

  - script: |
      gem install jekyll bundler
      bundle init
      bundle update --bundler
      bundle install --retry=3 --jobs=4
    displayName: 'jekyll install'

  - script: |
      npm install -g fsh-sushi
    displayName: 'fsh-sushi install'

  # Runs 'mvn install'
  - task: Maven@3
    displayName: 'Build project'
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      options: '-DskipTests'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '${{parameters.jdkVersion}}'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: false
      goals: 'install'

  - task: Bash@3
    displayName: 'Clone target IG'
    inputs:
      targetType: 'inline'
      script: mkdir -p $(Pipeline.Workspace)/target-ig; git clone ${{parameters.gitRepo}} "$(Pipeline.Workspace)/target-ig"

  - ${{if parameters.gitCommitHash}}:
    - task: Bash@3
      displayName: 'Checkout commit'
      inputs:
        targetType: 'inline'
        script: cd $(Pipeline.Workspace)/target-ig; git checkout ${{parameters.gitCommitHash}}

  - task: Maven@3
    displayName: 'Run IG Publisher with IG'
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx6G'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '${{parameters.jdkVersion}}'
      jdkArchitectureOption: 'x64'
      options: '-pl org.hl7.fhir.publisher.cli -Dpublisher.cli.exec.target-ig="$(Pipeline.Workspace)/target-ig"'
      publishJUnitResults: false
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'exec:java@target-ig-cli'

  - ${{if parameters.publishQAArtifacts}}:

    - script: |
          mkdir $(Pipeline.Workspace)/qa
          cp $(Pipeline.Workspace)/target-ig/output/qa.txt $(Pipeline.Workspace)/qa/${{parameters.igName}}.txt
          cp $(Pipeline.Workspace)/target-ig/output/qa.json $(Pipeline.Workspace)/qa/${{parameters.igName}}.json
    - task: PublishPipelineArtifact@1
      inputs:
          targetPath: '$(Pipeline.Workspace)/qa'
          artifact: ${{parameters.igName}}.qa
      displayName: 'Publish QA artifact'

